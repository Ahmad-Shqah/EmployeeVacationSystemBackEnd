// <auto-generated />
using System;
using EmployeeVacationSystem.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeVacationSystem.Migrations
{
    [DbContext(typeof(VacationSystemDbContext))]
    partial class VacationSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeVacationSystem.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.Employee", b =>
                {
                    b.Property<string>("number")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("departmentID")
                        .HasColumnType("int");

                    b.Property<string>("genderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("positionID")
                        .HasColumnType("int");

                    b.Property<string>("reportedToEmployeeNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("vacationDaysLeft")
                        .HasColumnType("int");

                    b.HasKey("number");

                    b.HasIndex("departmentID");

                    b.HasIndex("positionID");

                    b.HasIndex("reportedToEmployeeNumber");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("positions");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.RequestState", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("requestStates");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.VacationRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("approvedByEmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("declinedByEmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("employeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<int>("requestStateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("requestSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.Property<int>("totalVacationDays")
                        .HasColumnType("int");

                    b.Property<string>("vacationTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("employeeNumber");

                    b.HasIndex("requestStateID");

                    b.HasIndex("vacationTypeCode");

                    b.ToTable("vacationRequests");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.VacationType", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("code");

                    b.ToTable("vacationTypes");
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeVacationSystem.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeVacationSystem.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("positionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeVacationSystem.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("reportedToEmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EmployeeVacationSystem.Entities.VacationRequest", b =>
                {
                    b.HasOne("EmployeeVacationSystem.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("employeeNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeVacationSystem.Entities.RequestState", null)
                        .WithMany()
                        .HasForeignKey("requestStateID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeVacationSystem.Entities.VacationType", null)
                        .WithMany()
                        .HasForeignKey("vacationTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
